<Window x:Class="Panoptes.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:charts1="clr-namespace:Panoptes.View.Charts"
        xmlns:sessions="clr-namespace:Panoptes.Model.Sessions;assembly=Panoptes.Model"
        xmlns:panels="clr-namespace:Panoptes.View.Panels"
        xmlns:panels1="clr-namespace:Panoptes.ViewModels.Panels;assembly=Panoptes.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewModel="clr-namespace:Panoptes.ViewModels"
        xmlns:local="clr-namespace:Panoptes"
        xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
        xmlns:qc="clr-namespace:QuantConnect;assembly=QuantConnect.Common"
        mc:Ignorable="d"
        Background="{StaticResource WindowBackgroundBrush}"
        Foreground="{StaticResource ForegroundBrush}"
        DataContext="{Binding MainWindow, Source={StaticResource Locator}}"
        Loaded="MainWindow_OnLoaded"
        WindowStartupLocation="CenterOwner"
        Drop="MainWindow_OnDrop"
        DragOver="MainWindow_OnDragOver"
        AllowDrop="true"
        Title="LEAN Algorithm Monitor"
        Height="450" Width="800">

    <Window.InputBindings>
        <KeyBinding Command="{Binding ExitCommand}" Key="F4" Modifiers="Alt"/>
        <KeyBinding Command="{Binding OpenSessionCommand}" Key="O" Modifiers="Control"/>
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="24"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" IsMainMenu="True">
            <MenuItem Header="_File">
                <MenuItem Header="_Open..." Command="{Binding OpenSessionCommand}" InputGestureText="Ctrl+O"/>
                <Separator/>
                <MenuItem Header="_Close" Command="{Binding CloseCommand}"/>
                <Separator/>
                <MenuItem Header="_Export..." Command="{Binding ExportCommand}"/>
                <Separator/>
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Statistics" IsChecked="{Binding StatisticsPane.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <MenuItem Header="_Runtime Statistics" IsChecked="{Binding RuntimeStatisticsPane.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <Separator/>
                <MenuItem Header="_Profit &amp; Loss" IsChecked="{Binding ProfitLossPane.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <MenuItem Header="_Trades" IsChecked="{Binding TradesPane.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
                <Separator/>
                <MenuItem Header="_Log" IsChecked="{Binding LogPane.IsVisible, Mode=TwoWay}" IsCheckable="True"/>
            </MenuItem>
            <MenuItem Header="_Session" IsEnabled="{Binding IsSessionActive}">
                <MenuItem Header="_Connect" Command="{Binding ConnectCommand}"/>
                <MenuItem Header="_Disconnect" Command="{Binding DisconnectCommand}"/>
            </MenuItem>
            <!--
            <MenuItem Header="_Window">
                <MenuItem Header="_Save Window Layout" Command="{Binding SaveLayoutCommand}" CommandParameter="{Binding ElementName=DockingManager}"/>
                <MenuItem Header="Revert Window Layout" Command="{Binding RestoreLayoutCommand}" CommandParameter="{Binding ElementName=DockingManager}"/>
                <MenuItem Header="_Reset Window Layout" Command="{Binding ResetLayoutCommand}" CommandParameter="{Binding ElementName=DockingManager}"/>
            </MenuItem>
            -->
            <MenuItem Header="_Help">
                <MenuItem Header="_Charting documentation..." Click="BrowseChartingDocumentationMenuItem_OnClick"/>
                <Separator/>
                <MenuItem Header="_Monitor GitHub project..." Click="BrowseMonitorGithubMenuItem_OnClick"/>
                <MenuItem Header="_LEAN Engine GitHub project..." Click="BrowseLeanGithubMenuItem_OnClick"/>
                <Separator/>
                <MenuItem Header="_About..." Click="ShowAboutButton_OnClick"/>
            </MenuItem>
        </Menu>

        <!--
        <StackPanel Grid.Row="1" DataContext="{Binding Tools}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding RestoreLayoutCommand}" CommandParameter="{Binding ElementName=DockingManager}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <StackPanel.Resources>
                <DataTemplate DataType="{x:Type charts:ChartPaneViewModel}">
                    <charts1:ChartPanel/>
                </DataTemplate>
                
                <DataTemplate DataType="{x:Type grids:GridPanelViewModel}">
                    <grids1:GridPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:LogPanelViewModel}">
                    <panels:LogPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:ProfitLossPanelViewModel}">
                    <panels:ProfitLossPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:RuntimeStatisticsPanelViewModel}">
                    <panels:RuntimeStatisticsPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:StatisticsPanelViewModel}">
                    <panels:StatisticsPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:TradesPanelViewModel}">
                    <panels:TradesPanel/>
                </DataTemplate>
            </StackPanel.Resources>


            
            <panels:RuntimeStatisticsPanel/>
            <panels:StatisticsPanel/>
            <panels:LogPanel/>
            <panels:ProfitLossPanel/>

            <panels:TradesPanel/>
            <grids1:GridPanel/>
            <charts1:ChartPanel/>
        </StackPanel>
-->

        <!--
        <xcad:DockingManager
            x:Name="DockingManager"
            Grid.Row="1"
            DocumentsSource="{Binding Documents}"
            AnchorablesSource="{Binding Tools}"  
            LayoutUpdateStrategy="{StaticResource LayoutUpdateStrategy}"
            BorderThickness="0">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding RestoreLayoutCommand}" CommandParameter="{Binding ElementName=DockingManager}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <xcad:DockingManager.LayoutItemContainerStyleSelector>

                <view:PaneStyleSelector>
                    <view:PaneStyleSelector.DocumentStyle>
                        <Style TargetType="{x:Type xcad:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Name}"/>
                            <Setter Property="CanClose" Value="{Binding Model.CanClose}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                            <Setter Property="ContentId" Value="{Binding Model.Name}"/>
                        </Style>
                    </view:PaneStyleSelector.DocumentStyle>

                    <view:PaneStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Name}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                            <Setter Property="ContentId" Value="{Binding Model.Name}"/>
                        </Style>
                    </view:PaneStyleSelector.ToolStyle>
                </view:PaneStyleSelector>

            </xcad:DockingManager.LayoutItemContainerStyleSelector>

            <xcad:DockingManager.Resources>

                <DataTemplate DataType="{x:Type charts:ChartPaneViewModel}">
                    <charts1:ChartPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type grids:GridPanelViewModel}">
                    <grids1:GridPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:LogPanelViewModel}">
                    <panels:LogPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:ProfitLossPanelViewModel}">
                    <panels:ProfitLossPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:RuntimeStatisticsPanelViewModel}">
                    <panels:RuntimeStatisticsPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:StatisticsPanelViewModel}">
                    <panels:StatisticsPanel/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type panels1:TradesPanelViewModel}">
                    <panels:TradesPanel/>
                </DataTemplate>

            </xcad:DockingManager.Resources>

            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Vertical">

                </xcad:LayoutPanel>
            </xcad:LayoutRoot>

        </xcad:DockingManager>
-->
        
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="149*"/>
                <RowDefinition Height="113*"/>
                <RowDefinition Height="123*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="184*"/>
                <ColumnDefinition Width="279*"/>
                <ColumnDefinition Width="337*"/>
            </Grid.ColumnDefinitions>
            <panels:TradesPanel DataContext="{Binding TradesPane}" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <panels:RuntimeStatisticsPanel DataContext="{Binding RuntimeStatisticsPane}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <panels:StatisticsPanel DataContext="{Binding StatisticsPane}" Grid.Row="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto"/>
            <panels:ProfitLossPanel DataContext="{Binding ProfitLossPane}" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

            <panels:LogPanel DataContext="{Binding LogPane}" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

            <charts1:OxyPlotSelectionControl DataContext="{Binding OxyPlotSelectionPane}" Grid.ColumnSpan="2" Grid.Column="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto"/>

        </Grid>
        <StatusBar DataContext="{Binding StatusViewModel}" Grid.Row="2" Height="22" Margin="0,3,0,0">
            <StatusBar.Resources>
                <Style TargetType="StatusBar" BasedOn="{StaticResource StatusBarStyle}">
                    <Style.Triggers>
                        <!-- SessionState -->
                        <DataTrigger Binding="{Binding SessionState}" Value="{x:Static sessions:SessionState.Subscribed}">
                            <Setter Property="Background" Value="Chocolate"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SessionState}" Value="{x:Static sessions:SessionState.Unsubscribed}">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>

                        <!-- AlgorithmStatus -->
                        <DataTrigger Binding="{Binding AlgorithmStatus}" Value="{x:Static qc:AlgorithmStatus.LoggingIn}">
                            <Setter Property="Background" Value="CornflowerBlue"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding AlgorithmStatus}" Value="{x:Static qc:AlgorithmStatus.Initializing}">
                            <Setter Property="Background" Value="DodgerBlue"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding AlgorithmStatus}" Value="{x:Static qc:AlgorithmStatus.Running}">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding AlgorithmStatus}" Value="{x:Static qc:AlgorithmStatus.Stopped}">
                            <Setter Property="Background" Value="OrangeRed"/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding AlgorithmStatus}" Value="{x:Static qc:AlgorithmStatus.RuntimeError}">
                            <Setter Property="Background" Value="Red"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding AlgorithmStatus}" Value="{x:Static qc:AlgorithmStatus.Completed}">
                            <Setter Property="Background" Value="DarkSlateBlue"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StatusBar.Resources>
            <StatusBarItem>
                <TextBlock Text="{Binding ProjectName}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding SessionName}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding AlgorithmStatus}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" Margin="0">
                <!--="{Binding IsSessionActive, Converter={StaticResource BoolToVisibilityConverter}}">-->
                <ProgressBar Opacity="0.2" Foreground="{StaticResource ButtonForeground}" BorderThickness="0" 
                             Background="{StaticResource ButtonBackground}" Width="120" Margin="0" Height="22"
                             Minimum="0" Maximum="1" IsIndeterminate="{Binding IsProgressIndeterminate}"
                             Value="{Binding Progress}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
